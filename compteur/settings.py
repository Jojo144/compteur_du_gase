"""
Django settings for compteur project.

Generated by 'django-admin startproject' using Django 2.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os
from django.contrib.messages import constants as messages

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'crispy_forms',
    'easy_select2',
    'base',
]

CRISPY_TEMPLATE_PACK = 'bootstrap4'
SELECT2_USE_BUNDLED_JQUERY = False
SELECT2_ATTRS={
    'theme': 'bootstrap4',
    'width': '100%'
}

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'compteur.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'base.context_processors.base_processor',
            ],
        },
    },
]

WSGI_APPLICATION = 'compteur.wsgi.application'

# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'fr-fr'

TIME_ZONE = 'Europe/Paris'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_URL = '/static/'

SESSION_SERIALIZER = 'django.contrib.sessions.serializers.PickleSerializer'

MESSAGE_TAGS = {
    messages.DEBUG: 'badge-info',
    messages.INFO: 'badge-info',
    messages.SUCCESS: 'badge-success',
    messages.WARNING: 'badge-warning',
    messages.ERROR: 'badge-warning',
}

# todo
# "mail de l'admin à qui sont reporté les erreurs du logiciel"

SECRET_KEY = "blabla"
DEBUG = True
ALLOWED_HOSTS = []
PATH = ""

# YunoHost integration

YNH_INTEGRATION_ENABLED = False

try:
    from .settings_local import *
except ModuleNotFoundError:
    print('Warning: the file settings_local.py was not found, you are in debug mode.')

if YNH_INTEGRATION_ENABLED:
    AUTHENTICATION_BACKENDS = [
        'ynh_auth.auth.AllAdminRemoteUserBackend',
    ]

    # Insert our middleware right after AuthenticationMiddleware
    auth_middleware_index = MIDDLEWARE.index(
        'django.contrib.auth.middleware.AuthenticationMiddleware'
    )
    MIDDLEWARE.insert(
        auth_middleware_index + 1,
        'ynh_auth.middleware.CustomHeaderMiddleware',
    )

    LOGIN_URL = os.path.join(PATH, 'ynh_auth/login_router')
    LOGOUT_REDIRECT_URL='/yunohost/sso/?action=logout'
