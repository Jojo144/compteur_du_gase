#!/bin/bash

source ../settings/scripts/_common.sh
source /usr/share/yunohost/helpers

# Exit if an error occurs during the execution of the script
ynh_abort_if_errors


app=$YNH_APP_INSTANCE_NAME
domain=$(ynh_app_setting_get "$app" domain)
path=$(ynh_app_setting_get "$app" path)
is_public=$(ynh_app_setting_get "$app" is_public)
is_home_public=$(ynh_app_setting_get "$app" is_home_public)

final_path=/opt/$app


ynh_webpath_available $domain $path \
    || ynh_die "Path not available: ${domain}${path}"

test ! -d $final_path \
    || ynh_die "There is already a directory: $final_path "

nginx_conf=/etc/nginx/conf.d/$domain.d/$app.conf
if [ -f $nginx_conf ]; then
    ynh_die "There is already a nginx conf file at this path: $nginx_conf "
fi

gunicorn_path=/etc/systemd/system/$app.service
if [ -f $gunicorn_path ]; then
    ynh_die "There is already a gunicorn service file at this path: $gunicorn_path "
fi

log_path=/var/log/$app
test ! -d $log_path \
    || ynh_die "There is already a directory: $log_path "

# We do this first so that we have nothing to remove if we fail
# FIXME don't delete the user in case of failure here!
sudo useradd $app -d $final_path \
    || (ynh_die "User already exists: ${app}.\n Aborting.")

ynh_install_app_dependencies $pkg_dependencies

ynh_restore_file --origin_path="$final_path"
ynh_restore_file --origin_path="$nginx_conf"
ynh_restore_file --origin_path="$gunicorn_path"
ynh_restore_file --origin_path="$log_path"

sudo chown -R $app:www-data $final_path
sudo chown -R $app /var/log/$app
sudo chgrp -R www-data /var/log/$app


## Reload Nginx and regenerate SSOwat conf
sudo systemctl daemon-reload
sudo yunohost app ssowatconf
sudo service nginx reload
sudo systemctl start $app
sudo systemctl enable $app
sudo yunohost service add $app -l /var/log/$app/error.log /var/log/$app/access.log
