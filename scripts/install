#!/bin/bash

# Move in the directory where thescript is (useless for Ynh)
cd $(dirname $(realpath -s $0))

source _common.sh
if [[ "$1" == "--local" ]]
then
    source yunohost_helpers.sh
    YNH_APP_INSTANCE_NAME="compteur_gase"
    YNH_APP_ARG_DOMAIN="localhost"
    YNH_APP_ARG_PATH="/"
    YNH_APP_ARG_IS_PUBLIC=1
    YNH_APP_ARG_IS_HOME_PUBLIC=1
    YNH_APP_ARG_ADMIN="admin" # PERSONNALISER
    YNH_APP_ARG_PASSWD="adminadmin" # PERSONNALISER
    YNH_APP_ARG_EMAIL="bla@bla.fr" # PERSONNALISER
else
    source /usr/share/yunohost/helpers
fi


ynh_abort_if_errors

ynh_script_progression --message="Retreiving arguments..." --weight=1

app=$YNH_APP_INSTANCE_NAME

domain=$YNH_APP_ARG_DOMAIN
path=$YNH_APP_ARG_PATH
is_public=$YNH_APP_ARG_IS_PUBLIC
is_home_public=$YNH_APP_ARG_IS_HOME_PUBLIC
admin=$YNH_APP_ARG_ADMIN
passwd=$YNH_APP_ARG_PASSWD
email=$YNH_APP_ARG_EMAIL

# you could change this
final_path=/opt/$app
test ! -e "$final_path" || ynh_die --message="This path already contains a folder"

#     ynh_normalize_url_path example    # -> /example
#     ynh_normalize_url_path /example   # -> /example
#     ynh_normalize_url_path /example/  # -> /example
#     ynh_normalize_url_path /          # -> /
path=$(ynh_normalize_url_path $path)

ynh_app_setting_set "$app" domain "$domain"
ynh_app_setting_set "$app" path "$path"
ynh_app_setting_set "$app" is_public "$is_public"
ynh_app_setting_set "$app" is_home_public "$is_home_public"
ynh_app_setting_set "$app" admin "$admin"
ynh_app_setting_set "$app" email "$email"

secret=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 32 | head -n 1)
ynh_app_setting_set "$app" secret "$secret"

# TODO
# Check domain/path availability
ynh_webpath_available $domain $path

# FXME Useful? Make the script fail with
# This app is already installed. The url cannot be changed just by this function. Look into `app changeurl` if it's available.
# ynh_webpath_register $app $domain $path



ynh_script_progression --message="Installing system dependencies..." --weight=1
ynh_install_app_dependencies $pkg_dependencies


ynh_script_progression --message="Creating $app user..." --weight=1
ynh_system_user_create --username=$app --home_dir=$final_path


ynh_script_progression --message="Setting up source files..." --weight=1
mkdir -p $final_path
cp -r .. $final_path

chmod 750 "$final_path"
chmod -R o-rwx "$final_path"
chown -R $app:www-data "$final_path"


ynh_script_progression --message="Installing Python venv..." --weight=1
python3 -m venv $final_path/venv
venv_python=$final_path/venv/bin/python3
venv_pip=$final_path/venv/bin/pip

ynh_script_progression --message="Installing Python dependencies..." --weight=1
sudo -H $venv_pip install pip --upgrade
sudo -H $venv_pip install gunicorn
sudo -H $venv_pip install -r $final_path/requirements.txt

ynh_script_progression --message="Configuring Django..." --weight=1
settings_local=$final_path/compteur/settings_local.py
cp $final_path/compteur/settings_local.py.example $settings_local
ynh_replace_string "YNH_APP_ARG_DOMAIN" $domain $settings_local
# In settings_local, the path should be empty or wiht a trailing / and no starting /
if [ "$path" = "/" ]
then
    ynh_replace_string "YNH_APP_ARG_PATH" "" $settings_local
else
    ynh_replace_string "YNH_APP_ARG_PATH" "${path:1}/" $settings_local
fi
ynh_replace_string "YNH_APP_ARG_EMAIL" $email $settings_local
ynh_replace_string "YNH_APP_SECRET_KEY" $secret $settings_local
ynh_replace_string "YNH_APP_STATIC_ROOT" $final_path/static $settings_local


ynh_script_progression --message="Creating log folder..." --weight=1
mkdir -p /var/log/$app
chown -R $app /var/log/$app
chgrp -R www-data /var/log/$app

ynh_script_progression --message="Applying Django migrations and static files..." --weight=1
sudo -u $app $venv_python $final_path/manage.py migrate --noinput
sudo -u $app $venv_python $final_path/manage.py collectstatic --noinput

ynh_script_progression --message="Creating Django admin if not existing..." --weight=1
cat <<EOF | sudo -u $app $venv_python $final_path/manage.py shell
from django.contrib.auth import get_user_model
User = get_user_model()  # get the currently active user model,
User.objects.filter(username='admin').exists() or \
    User.objects.create_superuser('${admin}', '${email}', '${passwd}')
EOF

ynh_script_progression --message="Set a working sending email by default..." --weight=1
echo "UPDATE base_localsettings SET mail_from = 'Le compteur du GASE <le-compteur@$domain>';" | sudo -u $app $venv_python $final_path/manage.py dbshell


ynh_script_progression --message="Configuring Nginx..." --weight=1
if [[ "$1" == "--local" ]]
then
    cat > /etc/nginx/sites-enabled/$app.conf << EOF
server {
    listen 80;
    server_name localhost;

    location /static/ {
        root $final_path;
    }

    location / {
        include proxy_params;
        proxy_pass http://unix:$final_path/sock;
    }
}
EOF
else
    if [ "$path" = "/" ]
    then
        # to avoid "//static"
        ynh_replace_string "STATICPATHTOCHANGE" "/static" ../conf/nginx.conf
    else
        ynh_replace_string "STATICPATHTOCHANGE" "$path/static" ../conf/nginx.conf
    fi
    ynh_replace_string "PATHTOCHANGE" $path ../conf/nginx.conf
    ynh_replace_string "YNH_APP_INSTANCE_NAME" $app ../conf/nginx.conf
    cp ../conf/nginx.conf /etc/nginx/conf.d/$domain.d/$app.conf
fi


ynh_script_progression --message="Configuring a systemd service..." --weight=1
ynh_replace_string "YNH_APP_INSTANCE_NAME" $app ../conf/gunicorn_config.py
ynh_replace_string "YNH_APP_INSTANCE_NAME" $app ../conf/gunicorn.service
cp ../conf/gunicorn.service /etc/systemd/system/$app.service
systemctl daemon-reload
cp ../conf/gunicorn_config.py $final_path


ynh_script_progression --message="Configuring SSOwat..." --weight=1
if [[ $is_public -eq 1 ]]; then
    # unprotected_uris allows SSO credentials to be passed anyway.
    ynh_app_setting_set "$app" unprotected_uris "/"
fi

handle_is_home_public

if [[ "$1" != "--local" ]]
then
    yunohost app ssowatconf
fi

ynh_script_progression --message="Reloading Nginx web server..." --weight=1
systemctl restart nginx

ynh_script_progression --message="Starting $app service..." --weight=1
systemctl enable $app
systemctl restart $app

if [[ "$1" != "--local" ]]
then
    ynh_script_progression --message="Integrating service in YunoHost..." --weight=1
    yunohost service add $app -l /var/log/$app/error.log /var/log/$app/access.log
fi

ynh_script_progression --message="Installation of $app completed" --last
